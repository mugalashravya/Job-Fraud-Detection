from flask import Flask, request, jsonify
import joblib
import os
import re

app = Flask(__name__)

# ----------------------------
# Load model and vectorizer dynamically
# ----------------------------
base_dir = os.path.dirname(os.path.abspath(__file__))
model_dir = os.path.join(base_dir, 'model')

model = joblib.load(os.path.join(model_dir, 'job_fraud_model.pkl'))
vectorizer = joblib.load(os.path.join(model_dir, 'vectorizer.pkl'))

# ----------------------------
# Text cleaning function
# ----------------------------
def clean_text(text):
    text = re.sub(r'http\S+', '', text)           # remove URLs
    text = re.sub(r'[^a-zA-Z ]', '', text)       # keep only letters and spaces
    return text.lower()

# ----------------------------
# Home route (GET)
# ----------------------------
@app.route('/')
def home():
    return "âœ… Flask is running! Use POST /predict or /predict-batch."

# ----------------------------
# Single prediction route (POST)
# ----------------------------
@app.route('/predict', methods=['POST'])
def predict():
    data = request.json
    title = data.get('title', '')
    company_profile = data.get('company_profile', '')
    description = data.get('description', '')
    
    text = title + ' ' + company_profile + ' ' + description
    text = clean_text(text)
    
    vec = vectorizer.transform([text])
    pred = model.predict(vec)[0]
    
    return jsonify({'fraudulent': int(pred)})

# ----------------------------
# Batch prediction route (POST)
# ----------------------------
@app.route('/predict-batch', methods=['POST'])
def predict_batch():
    data_list = request.json  # Expecting a list of job dicts
    results = []

    for data in data_list:
        title = data.get('title', '')
        company_profile = data.get('company_profile', '')
        description = data.get('description', '')

        text = clean_text(title + ' ' + company_profile + ' ' + description)
        vec = vectorizer.transform([text])
        pred = model.predict(vec)[0]
        results.append({'title': title, 'fraudulent': int(pred)})
    
    return jsonify(results)

# ----------------------------
if __name__ == '__main__':
    app.run(debug=True)
app.py end 



from flask import Flask, request, render_template
import joblib
import os
import re

app = Flask(__name__)

# ----------------------------
# Load model and vectorizer dynamically
# ----------------------------
base_dir = os.path.dirname(os.path.abspath(__file__))
model_dir = os.path.join(base_dir, 'model')

model = joblib.load(os.path.join(model_dir, 'job_fraud_model.pkl'))
vectorizer = joblib.load(os.path.join(model_dir, 'vectorizer.pkl'))

# ----------------------------
# Text cleaning function
# ----------------------------
def clean_text(text):
    text = re.sub(r'http\S+', '', text)           # remove URLs
    text = re.sub(r'[^a-zA-Z ]', '', text)       # keep letters and spaces
    return text.lower()

# ----------------------------
# Home route - render HTML form
# ----------------------------
@app.route('/')
def home():
    return render_template('index.html')  # see next step for HTML

# ----------------------------
# Prediction route (POST)
# ----------------------------
@app.route('/predict', methods=['POST'])
def predict():
    title = request.form.get('title', '')
    description = request.form.get('description', '')
    
    # Combine text
    text = clean_text(title + ' ' + description)
    vec = vectorizer.transform([text])
    
    # Predict
    pred = model.predict(vec)[0]
    confidence = model.predict_proba(vec)[0].max()  # probability of predicted class
    
    # Map 0/1 to Genuine/Fraud
    result_text = "Genuine" if pred == 0 else "Fraud"
    
    return render_template('index.html', title=title, description=description,
                           result=result_text, confidence=f"{confidence*100:.2f}%")

# ----------------------------
if __name__ == '__main__':
    app.run(debug=True)


app.py2 end

<!DOCTYPE html>
<html>
<head>
    <title>Job Fraud Detection</title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f4f4f4; padding: 50px; }
        .container { max-width: 600px; margin: auto; background: #fff; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h2 { text-align: center; }
        textarea, input[type=text] { width: 100%; padding: 10px; margin: 10px 0; border-radius: 5px; border: 1px solid #ccc; }
        input[type=submit] { padding: 10px 20px; border: none; border-radius: 5px; background: #007BFF; color: #fff; cursor: pointer; }
        input[type=submit]:hover { background: #0056b3; }
        .result { margin-top: 20px; padding: 15px; background: #e9e9e9; border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h2>Job Fraud Detection</h2>
        <form method="POST" action="/predict">
            <label>Job Title:</label>
            <input type="text" name="title" placeholder="Enter job title" value="{{ title if title }}">
            
            <label>Job Description:</label>
            <textarea name="description" placeholder="Enter job description" rows="5">{{ description if description }}</textarea>
            
            <input type="submit" value="Predict">
        </form>

        {% if result %}
        <div class="result">
            <strong>Prediction:</strong> {{ result }} <br>
            <strong>Confidence:</strong> {{ confidence }}
        </div>
        {% endif %}
    </div>
</body>
</html>


index,html1. end



<!DOCTYPE html>
<html>
<head>
    <title>Job Fraud Detection</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <div class="container">
        <h2>Job Fraud Detection</h2>
        <form method="POST" action="/predict">
            <label>Company Name:</label>
            <input type="text" name="company" placeholder="Enter company name" value="{{ company if company }}">
            
            <label>Job Title:</label>
            <input type="text" name="title" placeholder="Enter job title" value="{{ title if title }}">
            
            <label>Job Description:</label>
            <textarea name="description" placeholder="Enter job description" rows="5">{{ description if description }}</textarea>
            
            <input type="submit" value="Predict">
        </form>

        {% if result %}
        <div class="result {% if result=='Fraudulent' %}fraud{% else %}genuine{% endif %}">
            <strong>Prediction:</strong> {{ result }} <br>
            <strong>Confidence:</strong> {{ confidence }}
        </div>
        {% endif %}
    </div>
</body>
</html>

index html2 end


body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(to right, #74ebd5, #ACB6E5);
    margin: 0;
    padding: 0;
}

.container {
    max-width: 600px;
    margin: 50px auto;
    background: #fff;
    padding: 30px;
    border-radius: 15px;
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
}

h2 {
    text-align: center;
    color: #333;
}

label {
    display: block;
    margin-top: 15px;
    font-weight: bold;
    color: #555;
}

input[type=text], textarea {
    width: 100%;
    padding: 12px;
    margin-top: 5px;
    border-radius: 8px;
    border: 1px solid #ccc;
    resize: vertical;
}

input[type=submit] {
    margin-top: 20px;
    width: 100%;
    padding: 12px;
    border: none;
    border-radius: 8px;
    background-color: #007BFF;
    color: #fff;
    font-size: 16px;
    cursor: pointer;
}

input[type=submit]:hover {
    background-color: #0056b3;
}

.result {
    margin-top: 20px;
    padding: 15px;
    border-radius: 10px;
    text-align: center;
    font-weight: bold;
    font-size: 18px;
}

.result.genuine {
    background-color: #d4edda;
    color: #155724;
}

.result.fraud {
    background-color: #f8d7da;
    color: #721c24;
}

style.css 2 End